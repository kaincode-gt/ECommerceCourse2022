<div class="modal fade" data-backdrop="static" data-keyboard="false" id="deleteConfirmationModal" tabindex="-1" role="dialog">
    <div class="modal-dialog modal-dialog-centered" role="document">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="exampleModalLabel">Confirm Delete</h5>
                <button type="button" class="close" @onclick="()=>OnConfirmationDelete(false)" data-bs-dismiss="modal" aria-label="Close">
                    <span aria-hidden="true">&times;</span>
                </button>
            </div>
            <div class="modal-body">
                Are you sure you want to delete?
            </div>
            <div class="modal-footer">
            @if(IsParentComponentProcessing)
            {
                  <button type="button" class="btn btn-secondary" disabled data-bs-dismiss="modal"> Cancel</button>
                <button type="button" class="btn btn-danger" disabled >Processing</button>
            }else
            {
            
                <button type="button" class="btn btn-secondary" @onclick="()=>OnConfirmationDelete(false)" data-bs-dismiss="modal"> Cancel</button>
                <button type="button" class="btn btn-danger" @onclick="()=>OnConfirmationDelete(true)" >Delete</button>
          
            }
             </div>
        </div>
    </div>
</div>


@code
{
    [Parameter]
    public bool IsParentComponentProcessing { get; set; }

    [Parameter]
    public EventCallback<bool> ConfirmationChanged { get; set; }

    private async Task OnConfirmationDelete(bool value)
    {
        if (value)
        {
            await ConfirmationChanged.InvokeAsync(value);
        }
    }
}